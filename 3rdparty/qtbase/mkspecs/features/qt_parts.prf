#
#  W A R N I N G
#  -------------
#
# This file is not part of the Qt API.  It exists purely as an
# implementation detail.  It may change from version to version
# without notice, or even be removed.
#
# We mean it.
#

# Ensure that each module has a .qmake.cache when properly qmake'd.
cache()

load(qt_configure)

load(qt_build_config)

TEMPLATE = subdirs

bp = $$eval($$upper($$TARGET)_BUILD_PARTS)
!isEmpty(bp): QT_BUILD_PARTS = $$bp

exists($$_PRO_FILE_PWD_/src/src.pro) {
    sub_src.subdir = src
    sub_src.target = sub-src
    SUBDIRS += sub_src

    exists($$_PRO_FILE_PWD_/tools/tools.pro) {
        sub_tools.subdir = tools
        sub_tools.target = sub-tools
        sub_tools.depends = sub_src
        # conditional treatment happens on a case-by-case basis
        SUBDIRS += sub_tools
    }
}

QT_BUILD_PARTS -= libs tools
!isEmpty(QT_BUILD_PARTS): warning("Unknown build part(s): $$QT_BUILD_PARTS")

QMAKE_DISTCLEAN += \
    .qmake.cache \
    config.cache \
    config.log \
    mkspecs/modules/*.pri \
    mkspecs/modules-inst/*.pri

tests = $$files($$_PRO_FILE_PWD_/config.tests/*.pro, true)
testdirs =
for (t, tests): \
    testdirs += $$relative_path($$dirname(t), $$_PRO_FILE_PWD_)
testdirs = $$unique(testdirs)
for (td, testdirs) {
    t = $$basename(td)-distclean
    $${t}.commands = -$$QMAKE_CD $$shell_path($$td) && $(MAKE) distclean
    QMAKE_EXTRA_TARGETS += $$t
    DISTCLEAN_DEPS += $$t
}
